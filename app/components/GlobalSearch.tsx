'use client';import {useEffect,useRef,useState} from 'react';
export default function GlobalSearch(){const[q,setQ]=useState('');const[loading,setLoading]=useState(false);const[ai,setAi]=useState('');const[fallback,setFallback]=useState<any>(null);const[data,setData]=useState<any>({articles:[],shows:[],videos:[],people:[]});const locale=typeof navigator!=='undefined'?navigator.language.slice(0,2):'en';const firstRun=useRef(true);
async function run(){if(!q.trim())return;setLoading(true);setAi('');setFallback(null);const sRes=await fetch(`/api/search?q=${encodeURIComponent(q)}&limit=6`).then(r=>r.json());const aRes=await fetch(`/api/ask`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({q,locale})}).then(r=>r.json());setData(sRes);setAi(aRes?.answer||'');setFallback(aRes?.fallback||null);setLoading(false);}
useEffect(()=>{if(firstRun.current){firstRun.current=false;return;}const t=setTimeout(run,300);return()=>clearTimeout(t);},[q]);
return(<section className="max-w-5xl mx-auto p-4"><div className="rounded-2xl border bg-white p-3 flex gap-2 sticky top-0 z-10"><input value={q} onChange={e=>setQ(e.target.value)} className="flex-1 px-3 py-2 rounded-lg outline-none" placeholder="Search shows, winners, athletes, rules, history…"/><button onClick={run} className="px-4 py-2 rounded-lg bg-neutral-900 text-white">Search</button></div>{loading&&<div className="mt-4 text-neutral-500">Searching…</div>}{(ai||fallback)&&(<div className="mt-4 rounded-xl border bg-white p-4"><div className="text-sm font-semibold mb-2">Ask WBN (AI)</div>{ai&&<div className="prose mb-2">{ai}</div>}{fallback&&(<div className="text-sm text-neutral-700">Not enough verified context. See the official page: <a href={fallback.url} className="text-blue-700 underline">{fallback.label}</a></div>)}</div>)}<div className="grid md:grid-cols-2 gap-4 mt-4"><Results title="Articles" items={data.articles}/><Results title="Shows" items={data.shows}/><Results title="Videos" items={data.videos}/><Results title="People" items={data.people}/></div></section>);}
function Results({title,items}:{title:string;items:any[]}){if(!items?.length)return(<div className="rounded-xl border bg-white p-4"><div className="font-semibold mb-2">{title}</div><div className="text-neutral-500 text-sm">No results yet.</div></div>);return(<div className="rounded-xl border bg-white p-4"><div className="font-semibold mb-2">{title}</div><ul className="space-y-2">{items.map((it:any)=>(<li key={it.id||it.slug}><a href={it.url||it.permalink||`/${it.type||'news'}/${it.slug}`} className="text-blue-700 hover:underline">{it.title||it.name}</a>{!!it.federation&&<span className="ml-2 text-xs text-neutral-500">{it.federation}</span>}{!!it.year&&<span className="ml-2 text-xs text-neutral-500">{it.year}</span>}</li>))}</ul></div>);}
