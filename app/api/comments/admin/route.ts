import { NextResponse } from 'next/server'; import { isAdminAuthed } from '@/app/lib/admin-auth'; import { createClient } from '@supabase/supabase-js'; const sb=()=>createClient(process.env.NEXT_PUBLIC_SUPABASE_URL!,process.env.SUPABASE_SERVICE_ROLE_KEY!,{auth:{persistSession:false}}); export async function GET(req:Request){ if(!isAdminAuthed()) return NextResponse.json({error:'Unauthorized'},{status:401}); const {searchParams}=new URL(req.url); const q=(searchParams.get('q')||'').trim(); const targetType=searchParams.get('targetType')||''; const page=Math.max(1,parseInt(searchParams.get('page')||'1',10)); const pageSize=25; const from=(page-1)*pageSize; const to=from+pageSize-1; const client=sb(); let query=client.from('comments').select('*',{count:'exact'}); if(targetType) query=query.eq('target_type',targetType); if(q) query=query.or(`content.ilike.%${q}%,guest_name.ilike.%${q}%,target_id.ilike.%${q}%`); const {data,error,count}=await query.order('is_pinned',{ascending:false}).order('created_at',{ascending:false}).range(from,to); if(error) return NextResponse.json({error:error.message},{status:400}); return NextResponse.json({items:data||[],total:count||0,page,pageSize}); }
